#include <stdio.h>
#include <stdlib.h>

struct node
{
    int data;
    struct node *next;
};

struct node *front,*rear;

void enqueue(int data)
{
    struct node *newnode = (struct node *)malloc(sizeof(struct node));
    newnode->data = data;
    newnode->next = NULL;
    if(front==NULL)
    {
        front = newnode;
        rear = front;
        rear->next = front;
    }
    else
    {
        rear->next = newnode;
        rear = newnode;
        rear->next = front;
    }
}

void dequeue()
{
    if(front==NULL)
        return;
    else
    {
        struct node *temp = front;
        front = front->next;
        rear->next = front;
        free(temp);
    }
}

void display()
{
    struct node *temp = front;
    do
    {
        printf("%d\t",temp->data);
        temp = temp->next;
    } 
    while (temp!=front);
}

void search(int data)
{
    int flag=0,count=0;
    struct node *temp = front;
    do
    {
        if(temp->data == data)
        {
            flag=1;
            break;
        }
        count++;    
        temp = temp->next;
    } 
    while (temp!=front);
    if(flag==0)
        printf("\nelement was not found");
    else
        printf("\nelement was found at index %d",count-1);
}

void insertafter(int data, int newdata)
{
    struct node *temp = front;
    struct node *newnode = (struct node *)malloc(sizeof(struct node));
    newnode->data = newdata;
    newnode->next = NULL;
    do
    {
        if(temp->data == data)
        {
            newnode->next = temp->next;
            temp->next = newnode;
        }    
        temp = temp->next;
    } 
    while (temp!=front);
}

void insertbefore(int data, int newdata)
{
    struct node *temp=front;
    do
    {
        if(temp->next->data == data)
        {
            break;
        }    
        temp = temp->next;
    } 
    while (temp!=front);
    insertafter(temp->data,newdata);
    
}

void main()
{
    int choice,value,value2;
    while(choice!=7)
    {
        printf("\nenter your choice:");
        printf("\nEnter 1 to enter data into the queue");
        printf("\nEnter 2 to remove data from the queue");
        printf("\nEnter 3 to display all the elements in the queue");
        printf("\nEnter 4 to search for an element");
        printf("\nEnter 5 to insert an element before a specific element");
        printf("\nEnter 6 to insert an element after a specific element");
        printf("\nEnter 7 to quit the program");
        scanf("%d",&choice);
        switch(choice)
        {
            case 1:
            printf("\nenter the value which you want to insert:");
            scanf("%d",&value);
            enqueue(value);
            break;
            case 2:
            dequeue();
            break;
            case 3:
            display();
            break;
            case 4:
            printf("\nenter the value which you want tot search for:");
            scanf("%d",&value);
            search(value);
            break;
            case 5:
            printf("\nenter the value you want to insert before: ");
            scanf("%d",&value);
            printf("\nenter the value which you want to insert: ");
            scanf("%d",&value2);
            insertbefore(value,value2);
            break;
            case 6:
            printf("\nenter the value you want to insert after: ");
            scanf("%d",&value);
            printf("\nenter the value which you want to insert: ");
            scanf("%d",&value2);
            insertafter(value,value2);
            break;
        }
    }
    
}   
